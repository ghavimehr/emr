# Generated by Django 4.2.8 on 2025-07-04 21:04

import apps.common.models_authentication
import apps.common.models_blog
import autoslug.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_quill.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomDevelopment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "project_type",
                    models.CharField(
                        choices=[
                            (
                                "CUSTOM_SOFTWARE_DEVELOPMENT",
                                "Custom Software Development",
                            ),
                            ("SERVICE_OPTIMIZATION", "Service Optimization"),
                            (
                                "CLOUDE_DEPLOYMENT",
                                "Cloud Deployment (Digital Ocean, AWS, Azure)",
                            ),
                        ],
                        max_length=255,
                    ),
                ),
                (
                    "budget_range",
                    models.CharField(
                        choices=[
                            ("UNDER_5k", "Under $5000"),
                            ("F5K_T10k", "$5000 - $10,000"),
                            ("OVER_10k", "Over $10000"),
                        ],
                        max_length=100,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "company_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                ("userId", models.IntegerField(default=-1)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("GENERAL", "General"),
                            ("ERR_500", "ERR_500"),
                            ("ERR_404", "ERR_404"),
                            ("ERR_403", "ERR_403"),
                            ("ERR_400", "ERR_400"),
                            ("API", "API"),
                        ],
                        default="GENERAL",
                        max_length=100,
                    ),
                ),
                ("text", models.TextField(blank=True, null=True)),
                ("status_code", models.CharField(blank=True, max_length=10, null=True)),
                ("input", models.JSONField(blank=True, null=True)),
                ("output", models.JSONField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Newsletter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("mailchimp", models.BooleanField(default=False)),
                ("subscribed_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Products",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("WEBAPP", "WebApp"),
                            ("DASHBOARD", "Dashboard"),
                            ("API", "Api"),
                        ],
                        default="DASHBOARD",
                        max_length=24,
                    ),
                ),
                ("card_info", models.CharField(default="", max_length=128)),
                ("info", models.CharField(default="", max_length=256)),
                ("features", django_quill.fields.QuillField(blank=True, null=True)),
                ("seo_title", models.CharField(default="", max_length=128)),
                ("seo_tags", models.CharField(default="", max_length=128)),
                ("seo_description", models.CharField(default="", max_length=256)),
                ("canonical", models.CharField(default="", max_length=128)),
                ("code", models.CharField(max_length=128, unique=True)),
                ("slug", models.CharField(max_length=128, unique=True)),
                ("free", models.BooleanField(default=True)),
                ("price", models.IntegerField(default=0)),
                ("price2", models.IntegerField(default=0)),
                ("pay_url", models.CharField(blank=True, max_length=256, null=True)),
                ("pay_url2", models.CharField(blank=True, max_length=256, null=True)),
                ("url_dw", models.CharField(default=None, max_length=256)),
                ("url_demo", models.CharField(default=None, max_length=256)),
                ("url_docs", models.CharField(default=None, max_length=256)),
                ("url_blog", models.CharField(blank=True, max_length=256, null=True)),
                ("url_video", models.CharField(blank=True, max_length=256, null=True)),
                ("url_changelog", models.CharField(default=None, max_length=256)),
                ("url_readme", models.CharField(default=None, max_length=256)),
                (
                    "design",
                    models.CharField(
                        choices=[
                            ("NA", "NA"),
                            ("rocket", "rocket"),
                            ("rocket-pro", "rocket-pro"),
                            ("rocket-ecommerce", "rocket-ecommerce"),
                            ("datta-able", "datta-able"),
                            ("datta-able-pro", "datta-able-pro"),
                            ("gradient-able", "gradient-able"),
                            ("gradient-able-pro", "gradient-able-pro"),
                            ("berry-dashboard", "berry-dashboard"),
                            ("berry-dashboard-pro", "berry-dashboard-pro"),
                            ("volt-dashboard", "volt-dashboard"),
                            ("volt-dashboard-pro", "volt-dashboard-pro"),
                            ("soft-ui-dashboard", "soft-ui-dashboard"),
                            ("soft-ui-dashboard-pro", "soft-ui-dashboard-pro"),
                            ("material-dashboard", "material-dashboard"),
                            ("material-dashboard-pro", "material-dashboard-pro"),
                            ("material-dashboard2-pro", "material-dashboard2-pro"),
                            ("corporate-dashboard", "corporate-dashboard"),
                            ("corporate-dashboard-pro", "corporate-dashboard-pro"),
                            ("argon-dashboard", "argon-dashboard"),
                            ("argon-dashboard-pro", "argon-dashboard-pro"),
                            ("argon-dashboard2-pro", "argon-dashboard2-pro"),
                            ("black-dashboard", "black-dashboard"),
                            ("black-dashboard-pro", "black-dashboard-pro"),
                            ("modernize-dashboard", "modernize-dashboard"),
                            ("modernize-dashboard-pro", "modernize-dashboard-pro"),
                            ("adminlte", "adminlte"),
                            ("adminlte-pro", "adminlte-pro"),
                            ("atlantis-dark", "atlantis-dark"),
                            ("atlantis-dark-pro", "atlantis-dark-pro"),
                            ("tabler", "tabler"),
                            ("coreui", "coreui"),
                            ("coreui-pro", "coreui-pro"),
                            ("material-kit", "material-kit"),
                            ("material-kit-pro", "material-kit-pro"),
                            ("argon-design", "argon-design"),
                            ("argon-design-pro", "argon-design-pro"),
                            ("pixel-bootstrap", "pixel-bootstrap"),
                            ("pixel-bootstrap-pro", "pixel-bootstrap-pro"),
                            ("soft-ui-design", "soft-ui-design"),
                            ("soft-ui-design-pro", "soft-ui-design-pro"),
                            ("bootstrap-design", "bootstrap-design"),
                            ("flowbite", "flowbite"),
                            ("tailwind", "tailwind"),
                            ("mui", "mui"),
                            ("shadcn", "shadcn"),
                            ("bulma", "bulma"),
                            ("pure-css", "pure-css"),
                        ],
                        default="NA",
                        max_length=24,
                    ),
                ),
                (
                    "design_by",
                    models.CharField(
                        choices=[
                            ("NA", "NA"),
                            ("creative-tim", "creative-tim"),
                            ("codedthemes", "codedthemes"),
                            ("themesberg", "themesberg"),
                            ("appseed", "appseed"),
                            ("adminlte", "adminlte"),
                            ("coreui", "coreui"),
                            ("tailwind", "tailwind"),
                            ("flowbite", "flowbite"),
                            ("bootstrap", "bootstrap"),
                            ("tabler", "tabler"),
                        ],
                        default="NA",
                        max_length=24,
                    ),
                ),
                (
                    "design_system",
                    models.CharField(
                        choices=[
                            ("NA", "NA"),
                            ("soft-ui-design", "soft-ui-design"),
                            ("material-design", "material-design"),
                            ("argon-design", "argon-design"),
                            ("black-design", "black-design"),
                            ("flowbite", "flowbite"),
                        ],
                        default="NA",
                        max_length=24,
                    ),
                ),
                (
                    "design_css",
                    models.CharField(
                        choices=[
                            ("NA", "NA"),
                            ("bootstrap", "bootstrap"),
                            ("bootstrap4", "bootstrap4"),
                            ("bootstrap5", "bootstrap5"),
                            ("tailwind", "tailwind"),
                            ("mui", "mui"),
                        ],
                        default="NA",
                        max_length=24,
                    ),
                ),
                (
                    "tech1",
                    models.CharField(
                        choices=[
                            ("NA", "NA"),
                            ("api-server", "api-server"),
                            ("django", "django"),
                            ("flask", "flask"),
                            ("fast-api", "fast-api"),
                            ("nodejs", "nodejs"),
                            ("laravel", "laravel"),
                            ("nextjs", "nextjs"),
                            ("full-stack", "full-stack"),
                        ],
                        default="NA",
                        max_length=24,
                    ),
                ),
                (
                    "tech2",
                    models.CharField(
                        choices=[
                            ("NA", "NA"),
                            ("react", "react"),
                            ("vuejs", "vuejs"),
                            ("svelte", "svelte"),
                        ],
                        default="NA",
                        max_length=24,
                    ),
                ),
                (
                    "tech3",
                    models.CharField(
                        choices=[
                            ("NA", "NA"),
                            ("react", "react"),
                            ("vuejs", "vuejs"),
                            ("svelte", "svelte"),
                        ],
                        default="NA",
                        max_length=24,
                    ),
                ),
                ("tech4", models.CharField(blank=True, max_length=64, null=True)),
                ("tech5", models.CharField(blank=True, max_length=64, null=True)),
                ("downloads", models.IntegerField(default=0)),
                ("release_date", models.DateField(blank=True, null=True)),
                ("version", models.CharField(blank=True, max_length=20, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "related_product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="related_products",
                        to="common.products",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProductTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "slug",
                    autoslug.fields.AutoSlugField(
                        editable=False, populate_from="name", unique=True
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProductVideo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                ("url", models.URLField(max_length=255)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("ADMIN", "Admin"),
                            ("USER", "User"),
                            ("COMPANY", "Company"),
                        ],
                        default="USER",
                        max_length=20,
                    ),
                ),
                ("full_name", models.CharField(blank=True, max_length=255, null=True)),
                ("country", models.CharField(blank=True, max_length=255, null=True)),
                ("email", models.EmailField(blank=True, max_length=255, null=True)),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=apps.common.models_authentication.avatar_with_id,
                    ),
                ),
                (
                    "slug",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                ("trusted", models.BooleanField(default=False)),
                ("pro", models.BooleanField(default=False)),
                (
                    "job_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("DEVELOPER", "Developer"),
                            ("TEAMLEADER", "Team Leader"),
                            ("DESIGNER", "Designer"),
                            ("DEVOPS", "DevOps"),
                            ("ARCHITECT", "Architect"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("public_profile", models.BooleanField(default=False)),
                ("bio", django_quill.fields.QuillField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Prompt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user_id", models.IntegerField(blank=True, default=-1, null=True)),
                ("question", models.TextField()),
                ("response", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Skills",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("PROGRAMMING", "Programming"),
                            ("FRAMEWORK", "Framework"),
                            ("DEPLOYMENT", "Deployment"),
                            ("NOCODE", "No-Code"),
                        ],
                        max_length=100,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                (
                    "slug",
                    autoslug.fields.AutoSlugField(
                        editable=False, null=True, populate_from="name", unique=True
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", django_quill.fields.QuillField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "author",
                    models.ForeignKey(
                        limit_choices_to={"role": "COMPANY"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="team",
                        to="common.profile",
                    ),
                ),
                (
                    "members",
                    models.ManyToManyField(
                        blank=True,
                        limit_choices_to={"role": "USER"},
                        related_name="members",
                        to="common.profile",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Ticket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("PRODUCT_ASSISTANCE", "Product Assistance"),
                            ("PLATFORM", "Platform"),
                            ("SUGGESTED_FEATURE", "Suggested Feature"),
                            ("GENERATED_APP", "Generated App"),
                        ],
                        default="PRODUCT_ASSISTANCE",
                        max_length=100,
                    ),
                ),
                (
                    "platform",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("PURCHASES", "Purchases"),
                            ("AUTHENTICATION", "Authentication"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", django_quill.fields.QuillField()),
                (
                    "states",
                    models.CharField(
                        choices=[
                            ("OPEN", "Open"),
                            ("ANSWERED", "Answered"),
                            ("WORK_IN_PROGRESS", "Work in Progress"),
                            ("CLIENT_REPLY", "Client Reply"),
                            ("CLOSED", "Closed"),
                        ],
                        default="OPEN",
                        max_length=50,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[("LOW", "Low"), ("HIGH", "High")],
                        default="LOW",
                        max_length=50,
                    ),
                ),
                ("custom_development", models.BooleanField(default=False)),
                ("repo_url", models.URLField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="common.products",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TeamRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("DEVELOPER", "Developer"),
                            ("TEAMLEADER", "Team Leader"),
                            ("DESIGNER", "Designer"),
                            ("DEVOPS", "DevOps"),
                            ("ARCHITECT", "Architect"),
                        ],
                        max_length=255,
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        limit_choices_to={"role": "USER"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="team_role",
                        to="common.profile",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="common.team"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TeamInvitation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("accepted", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="common.teamrole",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Props",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("DOWNLOAD", "Download"),
                            ("FEATURE", "Feature"),
                            ("PROMO_NAME", "Promo Name"),
                            ("PROMO_COUPON", "Promo Coupon"),
                            ("PROMO_DISCOUNT", "Promo Discount"),
                            ("PROMO_INFO", "Promo Info"),
                            ("PROMO_END_DATE", "Promo End Date"),
                            ("URL_VIDEO", "Video URL"),
                            ("URL_DOCS", "Docs URL"),
                            ("URL_BLOG", "Blog URL"),
                        ],
                        max_length=250,
                    ),
                ),
                ("state", models.BooleanField(default=False)),
                ("data", models.CharField(max_length=255)),
                ("order", models.IntegerField(blank=True, null=True)),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="common.products",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", django_quill.fields.QuillField(blank=True, null=True)),
                ("live_demo", models.CharField(blank=True, max_length=255, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "author",
                    models.ForeignKey(
                        limit_choices_to={"role": "COMPANY"},
                        on_delete=django.db.models.deletion.CASCADE,
                        to="common.profile",
                    ),
                ),
                (
                    "team",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="common.team",
                    ),
                ),
                (
                    "technologies",
                    models.ManyToManyField(
                        related_name="technologies", to="common.skills"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="profile",
            name="deployments",
            field=models.ManyToManyField(
                blank=True,
                limit_choices_to={"category": "DEPLOYMENT"},
                related_name="deployments",
                to="common.skills",
            ),
        ),
        migrations.AddField(
            model_name="profile",
            name="frameworks",
            field=models.ManyToManyField(
                blank=True,
                limit_choices_to={"category": "FRAMEWORK"},
                related_name="frameworks",
                to="common.skills",
            ),
        ),
        migrations.AddField(
            model_name="profile",
            name="no_codes",
            field=models.ManyToManyField(
                blank=True,
                limit_choices_to={"category": "NOCODE"},
                related_name="no_codes",
                to="common.skills",
            ),
        ),
        migrations.AddField(
            model_name="profile",
            name="programming_languages",
            field=models.ManyToManyField(
                blank=True,
                limit_choices_to={"category": "PROGRAMMING"},
                related_name="programming_languages",
                to="common.skills",
            ),
        ),
        migrations.AddField(
            model_name="profile",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="products",
            name="tags",
            field=models.ManyToManyField(blank=True, to="common.producttag"),
        ),
        migrations.CreateModel(
            name="GeneratedApp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "user_ip",
                    models.CharField(
                        blank=True, default=None, max_length=256, null=True
                    ),
                ),
                ("task_id", models.CharField(max_length=256)),
                (
                    "task_log",
                    models.CharField(
                        blank=True, default=None, max_length=1024, null=True
                    ),
                ),
                ("task_state", models.CharField(default="STARTING", max_length=256)),
                ("task_result", models.CharField(default="STARTING", max_length=256)),
                ("generated_at", models.DateTimeField(auto_now_add=True)),
                ("downloaded_at", models.DateTimeField(blank=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "gh_repo",
                    models.CharField(
                        blank=True, default=None, max_length=512, null=True
                    ),
                ),
                ("deleted", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="File",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True,
                        upload_to=apps.common.models_blog.get_thumbnail_filename,
                    ),
                ),
                ("url", models.URLField(blank=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("video", "video"),
                            ("pdf", "pdf"),
                            ("image", "image"),
                            ("other", "other"),
                        ],
                        default="other",
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Download",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                ("downloaded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "downloaded_version",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("downloaded_release_date", models.DateField(blank=True, null=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="common.products",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                ("message", django_quill.fields.QuillField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "ticket",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="common.ticket"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Article",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slug", models.SlugField(unique=True)),
                (
                    "state",
                    models.CharField(
                        choices=[("DRAFT", "Draft"), ("PUBLISHED", "Published")],
                        default="DRAFT",
                        max_length=10,
                    ),
                ),
                (
                    "visibility",
                    models.CharField(
                        choices=[
                            ("PUBLIC", "Public"),
                            ("AUTHENTICATED_USER", "Authenticated User"),
                            ("PRO_USER", "Pro User"),
                        ],
                        default="PUBLIC",
                        max_length=30,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("subtitle", models.CharField(max_length=255)),
                ("content", django_quill.fields.QuillField()),
                ("featured", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(related_name="articles", to="common.tag"),
                ),
                (
                    "thumbnail",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="common.file",
                    ),
                ),
                (
                    "video",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="common.file",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Bookmark",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "article",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="common.article"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("article", "user")},
            },
        ),
    ]
