# Generated by Django 4.2.8 on 2025-07-04 21:04

import apps.emr.lab.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("identity", "0001_initial"),
        ("events", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BloodTestPerformer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=255,
                        unique=True,
                        verbose_name="نام انجام دهنده تست (آزمون گیرنده / آزمایشگاه)",
                    ),
                ),
                (
                    "fa_name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name="نام انجام دهنده تست (آزمون گیرنده / آزمایشگاه)",
                    ),
                ),
            ],
            options={
                "verbose_name": "آزمایشگاه",
                "verbose_name_plural": "آزمایشگاه ها",
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="نام دسته آزمایش"
                    ),
                ),
                (
                    "en_name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name="نام انگلیسی دسته آزمایش",
                    ),
                ),
                (
                    "fa_name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name="نام دسته آزمایش",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="نام برچسب"
                    ),
                ),
                (
                    "fa_name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name="نام برچسب",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="TFT",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        default=apps.emr.lab.models.get_tehran_today,
                        verbose_name="تاریخ انجام",
                    ),
                ),
                (
                    "TSH",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=6,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="TSH",
                    ),
                ),
                (
                    "T3",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=6,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="T3",
                    ),
                ),
                (
                    "freeT3",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=6,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="freeT3",
                    ),
                ),
                (
                    "T4",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=5,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="T4 (mcrg/dl)",
                    ),
                ),
                (
                    "T4_mol",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=4,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="T4 (nmol/l)",
                    ),
                ),
                (
                    "freeT4",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=6,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="freeT4",
                    ),
                ),
                (
                    "AntiTPO",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=6,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Anti TPO Ab",
                    ),
                ),
                (
                    "Tg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=6,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Thyroglobulin",
                    ),
                ),
                (
                    "AntiTg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=6,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Anti Thyroglobulin Ab",
                    ),
                ),
                (
                    "antiTSH",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=6,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Anti TSH Ab",
                    ),
                ),
                (
                    "antiT3",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=6,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Anti T3 Ab",
                    ),
                ),
                (
                    "antiT4",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=6,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Anti T4 Ab",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="identity.patient",
                    ),
                ),
                (
                    "performer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="lab.bloodtestperformer",
                        verbose_name="نام آزمایشگاه",
                    ),
                ),
                (
                    "registered_event",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="events.event",
                        verbose_name="رویداد ذخیره شده",
                    ),
                ),
                (
                    "tag",
                    models.ManyToManyField(
                        blank=True, to="lab.tag", verbose_name="برچسب ها"
                    ),
                ),
            ],
            options={
                "verbose_name": "Thyroid Function Test",
            },
        ),
        migrations.CreateModel(
            name="Testtype",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="نام نوع آزمایش"
                    ),
                ),
                (
                    "fa_name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name="نام نوع آزمایش",
                    ),
                ),
                (
                    "eventtypes",
                    models.ManyToManyField(
                        blank=True,
                        related_name="testtypes",
                        to="events.eventtype",
                        verbose_name="نوع ثبت",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TestMeta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="نام آزمایش"
                    ),
                ),
                (
                    "fa_name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name="نام آزمایش",
                    ),
                ),
                (
                    "all_required",
                    models.BooleanField(
                        default=False, verbose_name="همه موارد الزامی است"
                    ),
                ),
                ("access", models.JSONField(default=dict, verbose_name="سطح دسترسی")),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tests",
                        to="lab.category",
                        verbose_name="دسته",
                    ),
                ),
                (
                    "testtype",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tests",
                        to="lab.testtype",
                        verbose_name="نوع آزمایش",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Psychometrician",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, unique=True, verbose_name="نام:"),
                ),
                ("fanme", models.CharField(max_length=255, verbose_name="نام")),
                (
                    "family",
                    models.CharField(max_length=255, verbose_name="نام خانوادگی:"),
                ),
                (
                    "ffamily",
                    models.CharField(max_length=255, verbose_name="نام خانوادگی"),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="آدرس"
                    ),
                ),
                (
                    "education",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="identity.educationlevel",
                        verbose_name="سطح تحصیلات",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="کاربر:",
                    ),
                ),
            ],
            options={
                "verbose_name": "روان سنج",
                "verbose_name_plural": "روان سنج ها",
            },
        ),
        migrations.CreateModel(
            name="PHQ",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        default=apps.emr.lab.models.get_tehran_today,
                        verbose_name="تاریخ انجام",
                    ),
                ),
                (
                    "somatoform",
                    models.BooleanField(
                        default=False, verbose_name="Somatoform Disorder"
                    ),
                ),
                ("major_depression", models.BooleanField(default=False)),
                ("other_depressions", models.BooleanField(default=False)),
                ("panic", models.BooleanField(default=False)),
                ("non_panic_anxiety", models.BooleanField(default=False)),
                ("bulimia", models.BooleanField(default=False)),
                ("binge_eating_disorder", models.BooleanField(default=False)),
                ("alcohol_abuse", models.BooleanField(default=False)),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="identity.patient",
                    ),
                ),
                (
                    "registered_event",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="events.event",
                        verbose_name="رویداد ذخیره شده",
                    ),
                ),
                (
                    "tag",
                    models.ManyToManyField(
                        blank=True, to="lab.tag", verbose_name="برچسب ها"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Moca",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        default=apps.emr.lab.models.get_tehran_today,
                        verbose_name="تاریخ انجام",
                    ),
                ),
                ("total", models.PositiveSmallIntegerField(verbose_name="نمره کل")),
                ("memory", models.PositiveSmallIntegerField(verbose_name="حافظه")),
                (
                    "visuospatial",
                    models.PositiveSmallIntegerField(
                        verbose_name="نمره بخش بصری-موقعیتی"
                    ),
                ),
                (
                    "naming",
                    models.PositiveSmallIntegerField(verbose_name="نمره بخش نامیدن"),
                ),
                (
                    "attention",
                    models.PositiveSmallIntegerField(verbose_name="نمره بخش توجه"),
                ),
                (
                    "language",
                    models.PositiveSmallIntegerField(verbose_name="نمره بخش زبان"),
                ),
                (
                    "abstraction",
                    models.PositiveSmallIntegerField(verbose_name="نمره بخش انتزاع"),
                ),
                (
                    "recall",
                    models.PositiveSmallIntegerField(verbose_name="نمره بخش حافظه"),
                ),
                (
                    "orientation",
                    models.PositiveSmallIntegerField(verbose_name="نمره بخش آگاهی"),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="identity.patient",
                    ),
                ),
                (
                    "performer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="lab.psychometrician",
                        verbose_name="نام انجام دهنده تست (آزمون گیرنده / آزمایشگاه)",
                    ),
                ),
                (
                    "registered_event",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="events.event",
                        verbose_name="رویداد ذخیره شده",
                    ),
                ),
                (
                    "tag",
                    models.ManyToManyField(
                        blank=True, to="lab.tag", verbose_name="برچسب ها"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MMSE",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        default=apps.emr.lab.models.get_tehran_today,
                        verbose_name="تاریخ انجام",
                    ),
                ),
                (
                    "total",
                    models.PositiveSmallIntegerField(
                        verbose_name="نمره کل پرسشنامه کیفیت زندگی"
                    ),
                ),
                (
                    "affective",
                    models.PositiveSmallIntegerField(verbose_name="نمره بخش روحیه"),
                ),
                (
                    "cognitive",
                    models.PositiveSmallIntegerField(verbose_name="نمره بخش شناخت"),
                ),
                (
                    "somatic",
                    models.PositiveSmallIntegerField(
                        verbose_name="نمره بخش علائم جسمی"
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="identity.patient",
                    ),
                ),
                (
                    "performer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="lab.psychometrician",
                        verbose_name="روان سنج",
                    ),
                ),
                (
                    "registered_event",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="events.event",
                        verbose_name="رویداد ذخیره شده",
                    ),
                ),
                (
                    "tag",
                    models.ManyToManyField(
                        blank=True, to="lab.tag", verbose_name="برچسب ها"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MetabolicProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        default=apps.emr.lab.models.get_tehran_today,
                        verbose_name="تاریخ انجام",
                    ),
                ),
                (
                    "FBS",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MaxValueValidator(999)],
                        verbose_name="FBS (Fast Plasma Glucose)",
                    ),
                ),
                (
                    "BS",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MaxValueValidator(999)],
                        verbose_name="BS (Random Plasma Glucose)",
                    ),
                ),
                (
                    "twohPP",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MaxValueValidator(999)],
                        verbose_name="2hPP (2-hours Post Prandial Plasma Glucose)",
                    ),
                ),
                (
                    "OGGT",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MaxValueValidator(999)],
                        verbose_name="OGTT (Oral Glucose Tolerance Test)",
                    ),
                ),
                (
                    "HbA1c",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Hb A1c",
                    ),
                ),
                (
                    "TC",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MaxValueValidator(999)],
                        verbose_name="TC (Total Cholesterol)",
                    ),
                ),
                (
                    "HDL",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MaxValueValidator(999)],
                        verbose_name="HDL (High-Density Lipoprotein)",
                    ),
                ),
                (
                    "LDL",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MaxValueValidator(999)],
                        verbose_name="LDL (Low-Density Lipoprotein)",
                    ),
                ),
                (
                    "VLDL",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MaxValueValidator(999)],
                        verbose_name="VLDL (Low-Density Lipoprotein)",
                    ),
                ),
                (
                    "TG",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MaxValueValidator(999)],
                        verbose_name="TG (Triglycerides)",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="identity.patient",
                    ),
                ),
                (
                    "performer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="lab.bloodtestperformer",
                        verbose_name="نام آزمایشگاه",
                    ),
                ),
                (
                    "registered_event",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="events.event",
                        verbose_name="رویداد ذخیره شده",
                    ),
                ),
                (
                    "tag",
                    models.ManyToManyField(
                        blank=True, to="lab.tag", verbose_name="برچسب ها"
                    ),
                ),
            ],
            options={
                "verbose_name": "پروفایل متابولیک",
            },
        ),
        migrations.CreateModel(
            name="LpPerformer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, unique=True, verbose_name="نام:"),
                ),
                ("fanme", models.CharField(max_length=255, verbose_name="نام")),
                (
                    "family",
                    models.CharField(max_length=255, verbose_name="نام خانوادگی:"),
                ),
                (
                    "ffamily",
                    models.CharField(max_length=255, verbose_name="نام خانوادگی"),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="آدرس"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="کاربر:",
                    ),
                ),
            ],
            options={
                "verbose_name": "آزمایشگاه",
                "verbose_name_plural": "آزمایشگاه ها",
            },
        ),
        migrations.CreateModel(
            name="LFT",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        default=apps.emr.lab.models.get_tehran_today,
                        verbose_name="تاریخ انجام",
                    ),
                ),
                (
                    "SGPT",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MaxValueValidator(999)],
                        verbose_name="SGPT (ALT)",
                    ),
                ),
                (
                    "ALP",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MaxValueValidator(9990)],
                        verbose_name="Alkaline Phosphatase (ALP)",
                    ),
                ),
                (
                    "ALB",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MaxValueValidator(99)],
                        verbose_name="Albumin",
                    ),
                ),
                (
                    "BiliT",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=6,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Total Bilirubin",
                    ),
                ),
                (
                    "BiliD",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=6,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Total Bilirubin",
                    ),
                ),
                (
                    "GGT",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MaxValueValidator(999)],
                        verbose_name="GGT (Gamma-Glutamyl Transferase)",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="identity.patient",
                    ),
                ),
                (
                    "performer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="lab.bloodtestperformer",
                        verbose_name="نام آزمایشگاه",
                    ),
                ),
                (
                    "registered_event",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="events.event",
                        verbose_name="رویداد ذخیره شده",
                    ),
                ),
                (
                    "tag",
                    models.ManyToManyField(
                        blank=True, to="lab.tag", verbose_name="برچسب ها"
                    ),
                ),
            ],
            options={
                "verbose_name": "تست های عملکرد کبد",
            },
        ),
        migrations.CreateModel(
            name="CSF",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        default=apps.emr.lab.models.get_tehran_today,
                        verbose_name="تاریخ انجام",
                    ),
                ),
                (
                    "WBC",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=4,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="WBC",
                    ),
                ),
                (
                    "RBC",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=4,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="RBC",
                    ),
                ),
                (
                    "neutrophils",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Neutrophils",
                    ),
                ),
                (
                    "lymphocytes",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Lymphocytes",
                    ),
                ),
                (
                    "monocytes",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Monocytes",
                    ),
                ),
                (
                    "eosinophils",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Eosinophils",
                    ),
                ),
                (
                    "basophils",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Basophils",
                    ),
                ),
                (
                    "glucose",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=4,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Glucose",
                    ),
                ),
                (
                    "protein",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=4,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Protein",
                    ),
                ),
                (
                    "ketone",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=4,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Ketone",
                    ),
                ),
                (
                    "AB42",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=4,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Amyloid Beta 1-42",
                    ),
                ),
                (
                    "alpha_synuclein",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=4,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Alpha Synuclein",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="identity.patient",
                    ),
                ),
                (
                    "performer_lab",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="lab.bloodtestperformer",
                        verbose_name="نام آزمایشگاه",
                    ),
                ),
                (
                    "performer_lp",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="lab.lpperformer",
                        verbose_name="متخصص انجام دهنده LP",
                    ),
                ),
                (
                    "registered_event",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="events.event",
                        verbose_name="رویداد ذخیره شده",
                    ),
                ),
                (
                    "tag",
                    models.ManyToManyField(
                        blank=True, to="lab.tag", verbose_name="برچسب ها"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CBC",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        default=apps.emr.lab.models.get_tehran_today,
                        verbose_name="تاریخ انجام",
                    ),
                ),
                (
                    "WBC",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="WBC",
                    ),
                ),
                (
                    "RBC",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="RBC",
                    ),
                ),
                (
                    "hemoglobin",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Hemoglobin",
                    ),
                ),
                (
                    "hemotocrite",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Hematocrit",
                    ),
                ),
                (
                    "MCV",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="MCV",
                    ),
                ),
                (
                    "MCHC",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="MCHC",
                    ),
                ),
                (
                    "RDW_CV",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="RDW-CV",
                    ),
                ),
                (
                    "RDW_SD",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="RDW-SD",
                    ),
                ),
                (
                    "platelets",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Platelets"
                    ),
                ),
                (
                    "MPV",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="MPV",
                    ),
                ),
                (
                    "PDW",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="PDW",
                    ),
                ),
                (
                    "PCT",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=6,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="PCT",
                    ),
                ),
                (
                    "neutrophils",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Neutrophils",
                    ),
                ),
                (
                    "lymphocytes",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Lymphocytes",
                    ),
                ),
                (
                    "monocytes",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Monocytes",
                    ),
                ),
                (
                    "eosinophils",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Eosinophils",
                    ),
                ),
                (
                    "basophils",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Basophils",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="identity.patient",
                    ),
                ),
                (
                    "performer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="lab.bloodtestperformer",
                        verbose_name="نام آزمایشگاه",
                    ),
                ),
                (
                    "registered_event",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="events.event",
                        verbose_name="رویداد ذخیره شده",
                    ),
                ),
                (
                    "tag",
                    models.ManyToManyField(
                        blank=True, to="lab.tag", verbose_name="برچسب ها"
                    ),
                ),
            ],
            options={
                "verbose_name": "شمارش کامل خون",
            },
        ),
    ]
