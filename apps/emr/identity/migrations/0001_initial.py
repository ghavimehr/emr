# Generated by Django 4.2.8 on 2025-07-04 21:04

import apps.common.models_localization
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BloodGroup",
            fields=[
                (
                    "id",
                    models.PositiveSmallIntegerField(primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=3)),
            ],
            bases=(apps.common.models_localization.LocalizedNameMixin, models.Model),
        ),
        migrations.CreateModel(
            name="DominantHand",
            fields=[
                (
                    "id",
                    models.PositiveSmallIntegerField(primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=30)),
                ("name_fa", models.CharField(blank=True, max_length=30)),
            ],
            bases=(apps.common.models_localization.LocalizedNameMixin, models.Model),
        ),
        migrations.CreateModel(
            name="EducationLevel",
            fields=[
                (
                    "id",
                    models.PositiveSmallIntegerField(primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=20)),
                ("name_fa", models.CharField(blank=True, max_length=20)),
            ],
            bases=(apps.common.models_localization.LocalizedNameMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Ethnicity",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=20, unique=True)),
                ("name_fa", models.CharField(blank=True, max_length=20)),
            ],
            bases=(apps.common.models_localization.LocalizedNameMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Gender",
            fields=[
                (
                    "id",
                    models.PositiveSmallIntegerField(primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=50)),
                ("name_fa", models.CharField(blank=True, max_length=50)),
            ],
            bases=(apps.common.models_localization.LocalizedNameMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Insurance",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=20, unique=True)),
                ("name_fa", models.CharField(blank=True, max_length=20)),
            ],
            bases=(apps.common.models_localization.LocalizedNameMixin, models.Model),
        ),
        migrations.CreateModel(
            name="LanguageOption",
            fields=[
                (
                    "id",
                    models.PositiveSmallIntegerField(primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=10)),
                ("name_fa", models.CharField(blank=True, max_length=10)),
            ],
            bases=(apps.common.models_localization.LocalizedNameMixin, models.Model),
        ),
        migrations.CreateModel(
            name="MaritalStatus",
            fields=[
                (
                    "id",
                    models.PositiveSmallIntegerField(primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=30)),
                ("name_fa", models.CharField(blank=True, max_length=30)),
            ],
            bases=(apps.common.models_localization.LocalizedNameMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Occupation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                ("name_fa", models.CharField(blank=True, max_length=100, null=True)),
            ],
            bases=(apps.common.models_localization.LocalizedNameMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Secretarytags",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="Patient",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "patient_id",
                    models.PositiveIntegerField(blank=True, null=True, unique=True),
                ),
                (
                    "patient_id_alternative",
                    models.PositiveIntegerField(blank=True, null=True, unique=True),
                ),
                ("first_name", models.CharField(blank=True, max_length=100, null=True)),
                ("last_name", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "ssn",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        null=True,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Patient ID must be exactly 10 digits.",
                                regex="^\\d{10}$",
                            )
                        ],
                    ),
                ),
                ("birthday", models.DateField(blank=True, null=True)),
                (
                    "payment_label",
                    models.CharField(
                        choices=[
                            ("NC", "No Cost"),
                            ("VIP", "VIP"),
                            ("STD", "Standard"),
                        ],
                        default="STD",
                        max_length=50,
                    ),
                ),
                ("tags", models.TextField(blank=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("address", models.TextField(blank=True, null=True)),
                ("edit_history", models.JSONField(blank=True, default=dict)),
                ("report", models.JSONField(blank=True, default=dict)),
                ("ethnicity", models.JSONField(blank=True, default=dict)),
                ("insurance", models.JSONField(blank=True, default=dict)),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=11,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Must start with 0 and be 11 digits total.",
                                regex="^0\\d{10}$",
                            )
                        ],
                    ),
                ),
                (
                    "messenger1",
                    models.CharField(
                        blank=True,
                        max_length=11,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Must start with 0 and be 11 digits total.",
                                regex="^0\\d{10}$",
                            )
                        ],
                    ),
                ),
                (
                    "messenger2",
                    models.CharField(
                        blank=True,
                        max_length=11,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Must start with 0 and be 11 digits total.",
                                regex="^0\\d{10}$",
                            )
                        ],
                    ),
                ),
                (
                    "height",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MaxValueValidator(999)],
                    ),
                ),
                (
                    "weight",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MaxValueValidator(999)],
                    ),
                ),
                (
                    "Secretarytags",
                    models.ManyToManyField(blank=True, to="identity.secretarytags"),
                ),
                (
                    "blood_group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="identity.bloodgroup",
                    ),
                ),
                (
                    "dominanthand",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="identity.dominanthand",
                    ),
                ),
                (
                    "education_level",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="identity.educationlevel",
                    ),
                ),
                (
                    "gender",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="identity.gender",
                    ),
                ),
                (
                    "insurances",
                    models.ManyToManyField(blank=True, to="identity.insurance"),
                ),
                (
                    "language_option",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="identity.languageoption",
                    ),
                ),
                (
                    "marital_status",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="identity.maritalstatus",
                    ),
                ),
                (
                    "occupation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="identity.occupation",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["first_name", "last_name"],
                        name="identity_pa_first_n_527dfd_idx",
                    ),
                    models.Index(fields=["ssn"], name="identity_pa_ssn_6b8ae7_idx"),
                    models.Index(
                        fields=["patient_id"], name="identity_pa_patient_73c73f_idx"
                    ),
                ],
            },
        ),
    ]
